openapi: 3.0.3
info:
  description: This api allow you to add and validate promo codes
  version: 1.0.0
  title: indy-tech-test
paths:
  /api/v1/promocodes:
    post:
      summary: Add a promo code
      description: |
        Allow to add a promo code with various restrictions
      operationId: addPromoCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromoCodeAddBody"
      responses:
        "200":
          description: Promo code has been succesfully added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromcodeAddResponse"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalError"
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalError"

  /api/v1/promocodes/validate:
    post:
      summary: Validate a promo code
      description: |
        Validate a given promo code to apply its corresponding discount
      operationId: validatePromocode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromocodeValidateBody"
      responses:
        "200":
          description: Promo code is valid and give its corresponding discount
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromocodeValidateResponse"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalError"
              example:
                message: "Validation failed for request.."
        "500":
          description: "Internal error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalError"

components:
  schemas:
    GlobalError:
      required:
        - message
      properties:
        message:
          type: string
        code:
          type: string

    PromocodeValidateBody:
      type: object
      required:
        - promocode_name
      properties:
        promocode_name:
          type: string
        arguments:
          $ref: "#/components/schemas/PromocodeArgumentsBody"

    PromocodeArgumentsBody:
      type: object
      properties:
        age:
          type: integer
          minimum: 0
          maximum: 130
        meteo:
          $ref: "#/components/schemas/Meteo"

    Meteo:
      type: object
      required:
        - town
      properties:
        town:
          type: string

    PromocodeValidateResponse:
      type: object
      required:
        - promocode_name
        - status
      properties:
        promocode_name:
          type: string
        status:
          type: string
          enum: ["accepted", "denied"]
        reasons:
          type: object

    reasons:
      type: object
      properties:
        meteo:
          type: string
        date:
          type: string
        age:
          type: string

    PromoCodeAddBody:
      type: object
      required:
        - name
        - avantage
        - restrictions
      properties:
        "name":
          type: string
        "avantage":
          type: object
          required:
            - percent
          properties:
            "percent":
              type: integer
              minimum: 0
              maximum: 100
        "restrictions":
          type: array
          minItems: 1
          items:
            anyOf:
              - $ref: "#/components/schemas/allPossibleRestrictions"
              - type: object
                required:
                  - "@and"
                properties:
                  "@and":
                    $ref: "#/components/schemas/andRestriction"
              - type: object
                required:
                  - "@or"
                properties:
                  "@or":
                    $ref: "#/components/schemas/orRestriction"

    truc:
      type: object
      required:
        - "@date"
      properties:
        "@date":
          $ref: "#/components/schemas/dateRestriction"

    allPossibleRestrictions:
      type: object
      anyOf:
        - type: object
          required:
            - "@meteo"
          properties:
            "@meteo":
              $ref: "#/components/schemas/meteoRestriction"
        - type: object
          required:
            - "@age"
          properties:
            "@age":
              $ref: "#/components/schemas/mathRestriction"
        - type: object
          required:
            - "@date"
          properties:
            "@date":
              $ref: "#/components/schemas/dateRestriction"

    andRestriction:
      type: array
      minItems: 2
      items:
        $ref: "#/components/schemas/allPossibleRestrictions"

    orRestriction:
      type: array
      minItems: 2
      items:
        $ref: "#/components/schemas/allPossibleRestrictions"

    dateRestriction:
      type: object
      required:
        - after
        - before
      properties:
        after:
          type: string
          format: date
        before:
          type: string
          format: date

    meteoRestriction:
      type: object
      oneOf:
        - type: object
          required:
            - "is"
          properties:
            "is":
              type: string
              enum: ["clear", "cloudy", "rain"]
        - type: object
          required:
            - "temp"
          properties:
            "temp":
              $ref: "#/components/schemas/mathRestriction"

    mathRestriction:
      type: object
      anyOf:
        - type: object
          required:
            - "eq"
          properties:
            "eq":
              type: number
        - type: object
          required:
            - "gt"
          properties:
            "gt":
              type: number
        - type: object
          required:
            - "lt"
          properties:
            "lt":
              type: number

    PromcodeAddResponse:
      type: object
      properties:
        "name":
          type: string
